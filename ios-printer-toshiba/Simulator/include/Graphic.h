 //
 //  Generated by the J2ObjC translator.  DO NOT EDIT!
 //  source: /Users/qiyu/j2obctemp/in/BcpIssueLibrary/src/Graphic.java
 //


#import "Figure.h"
#import "UIKit/UIImage.h"

@protocol ProfileInterface;

@interface Graphic : Figure {
@public
    BOOL Flag_;
    BOOL RotFlag_;
    long GraphicType_;		 // 0:ニブル 1:ヘキサ 2:TOPIX圧縮
    
}

#pragma mark Public

/**
 *
 *  関数名   : init
 *
 *  機能     : 初期化
 *
 *  機能説明 : 初期化
 *
 *  返り値   : なし
 *
 *  備考     :
 *
 */
- (id)init:(id<ProfileInterface>)p_in;

/**
 *
 *  関数名   : LoadFigure
 *
 *  機能     : ｵﾌﾞｼﾞｪｸﾄの読み込み
 *
 *  機能説明 : 指定されたｵﾌﾞｼﾞｪｸﾄの読み込み
 *
 *  返り値   : 成功：TRUE、失敗：FALSE
 *
 *  備考     :
 *
 */
- (BOOL)LoadFigure:(long)iCnt
      withPathName:(NSString *)lpszPathName;

/**
 *
 *  関数名   : SetDataCommand
 *
 *  機能     : ﾃﾞｰﾀｺﾏﾝﾄﾞ作成
 *
 *  機能説明 : ﾃﾞｰﾀｺﾏﾝﾄﾞ作成
 *
 *  返り値   : 成功：TRUE、失敗：FALSE
 *
 *  備考     :
 *
 */
- (BOOL)SetDataCommand:(long)iCode
        withTrans:(TRANSBLOCK *)wpTrans
            withBarSet:(BarSet *)Barset
         withComStruct:(ComStruct *)pCom;

/**
 * ｸﾞﾗﾌｨｯｸｺﾏﾝﾄﾞ設定
 * @param pCom 通信設定
 * @param lpBmi 送信ﾋﾞｯﾄﾏｯﾌﾟ情報
 * @throws Exception メモリ確保失敗
 */
- (void) SetGraphicCommand:(ComStruct*) pCom	// 通信設定
                withBitmap:(UIImage*)lpBmi;     // 送信ﾋﾞｯﾄﾏｯﾌﾟ情報

/**
 *
 *  関数名   : CGraphic::GetSendDataSize
 *
 *  機能     : 送信ﾃﾞｰﾀｺﾏﾝﾄﾞｻｲｽﾞ取得
 *
 *  機能説明 : 送信ﾃﾞｰﾀｺﾏﾝﾄﾞｻｲｽﾞ取得
 *
 *  返り値   : 送信ﾃﾞｰﾀｺﾏﾝﾄﾞｻｲｽﾞ取得
 *
 *  備考     : ｸﾞﾗﾌｨｯｸｺﾏﾝﾄﾞで特殊設定
 *
 */
- (long)GetSendDataSize;

/**
 * ﾋﾞｯﾄﾏｯﾌﾟﾌｧｲﾙ読み込み
 * @param lpFile ビットマップファイル名
 * @return 成功：読み込んだビットマップオブジェクト、失敗：NULL
 */
- (UIImage*) ReadBmpFile:(NSString*) lpFile;			// ﾋﾞｯﾄﾏｯﾌﾟﾌｧｲﾙ名(ﾌﾙﾊﾟｽ)

/**
 * 送信用ﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟの生成
 * @param lpSBmi 変換元ﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 * @param lpRect 送信用ﾋﾞｯﾄﾏｯﾌﾟの矩形
 * @param lpRealRect 変換元ﾋﾞｯﾄﾏｯﾌﾟの矩形
 * @param RotFlag 回転ﾌﾗｸﾞ
 * @param iZoom 拡大縮小ﾌﾗｸﾞ
 * @return 成功：ﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟのﾍｯﾀﾞ情報、失敗：FALSE
 */
// 事前に回転変換してあるので、回転変換もうしない。
- (UIImage*) GetDestBmp:(UIImage*) lpSBmi			// 変換元ﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟのｱﾄﾞﾚｽ
               withRect:(CRectangle*) lpRect		// 送信用ﾋﾞｯﾄﾏｯﾌﾟの矩形
           withRealRect:(CRectangle*) lpRealRect	// 変換元ﾋﾞｯﾄﾏｯﾌﾟの矩形
            withRotFlag:(BOOL)RotFlag				// 回転ﾌﾗｸﾞ
            withZoomFlg:(BOOL)iZoom;				// 拡大縮小ﾌﾗｸﾞ
    
/**
 * 送信時使用するﾋﾞｯﾄﾏｯﾌﾟの矩形を求める
 * @param lpBmi 信ﾋﾞｯﾄﾏｯﾌﾟ情報
 * @param rect ｵﾌﾞｼﾞｪｸﾄの矩形の大きさ(単位ﾄﾞｯﾄ)
 * @param RealRect 求めたﾋﾞｯﾄﾏｯﾌﾟの矩形
 */
- (void) GetRealRect:(UIImage*) lpBmi			// 送信ﾋﾞｯﾄﾏｯﾌﾟ情報
            withRect:(CRectangle *)rect			// ｵﾌﾞｼﾞｪｸﾄの矩形の大きさ(単位ﾄﾞｯﾄ)
        withRealRect:(CRectangle*) RealRect;	// 求めたﾋﾞｯﾄﾏｯﾌﾟの矩形

/**
 * ｵﾌﾞｼﾞｪｸﾄの大きさの変換<br>
 * ｵﾌﾞｼﾞｪｸﾄの大きさ(0.1mm単位)からﾄﾞｯﾄ単位に変換
 * @param rect 変換後のｵﾌﾞｼﾞｪｸﾄ大きさ
 * @param Barset ﾌﾟﾘﾝﾀ情報
 */
- (void) GetDestRect:(CRectangle*) rect			// 変換後のｵﾌﾞｼﾞｪｸﾄ大きさ
          withBarSet:(BarSet*) Barset;			// ﾌﾟﾘﾝﾀ情報

/**
 * ﾋﾞｯﾄﾏｯﾌﾟﾃﾞｰﾀの90回転
 * @param lpBmi 回転元のﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 * @return 回転したﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 */
-(UIImage*) BitmapRotation90:(UIImage*) lpBmi;

/**
 * ﾋﾞｯﾄﾏｯﾌﾟ拡大縮小
 * @param lpBmi 拡大縮小元のﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 * @return 拡大縮小したﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 */
- (UIImage*)drawImageWithScaleCTM:(UIImage*) lpBmi
                    withZoomRatio:(float)ratio;
/**
 * ﾋﾞｯﾄﾏｯﾌﾟ移動
 * @param lpBmi 移動元のﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 * @return 移動したﾒﾓﾘﾋﾞｯﾄﾏｯﾌﾟ
 */
- (UIImage*)drawImageWithTranslateCTM:(UIImage*) lpBmi
                           withShiftX:(float)shiftX
                           withShiftY:(float)shiftY;

/**
 * ｵﾌﾞｼﾞｪｸﾄ種類判断
 */
- (long) CheckObjID;

/**
 * 画像処理モードの設定
 * @param iType 画像処理モード 0:ニブル 1:ヘキサ 2:TOPIX圧縮
 */
-(void) SetGraphicType:(long) iType;

@end

